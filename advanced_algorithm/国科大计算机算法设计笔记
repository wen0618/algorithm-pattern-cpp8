一、How to solve problems:
1.跟这个问题相似的有哪些问题？对于相似问题的算法能否直接应用？若不能，哪些性质特殊？
2.这个问题能否分解?关键数据结构是什么？
3.这个问题的解有什么形式？能否枚举？
二、Serval lessons：
1.基于对问题结构的算法设计；
2.从最简单的例子做起；
3.试图把大的问题分解成小的问题；
4.试图从粗糙解开始改进；
5.难以优化的函数，用上下界函数代替；
6.复杂操作的潜力一定要挖尽；
7.求同时满足两个条件的解，分布满足

8.想想对偶

![g1](https://github.com/wen0618/algorithm-pattern-cpp8/blob/master/advanced_algorithm/g1.jpg)

![g2](https://github.com/wen0618/algorithm-pattern-cpp8/blob/master/advanced_algorithm/g2.jpg)

![g3](https://github.com/wen0618/algorithm-pattern-cpp8/blob/master/advanced_algorithm/g3.jpg)

